//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ED_DesktopClient.EDServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EDServiceReference.IServiceED")]
    public interface IServiceED {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceED/LoadEmployees", ReplyAction="http://tempuri.org/IServiceED/LoadEmployeesResponse")]
        ED_WcfService.Employee[] LoadEmployees(ED_WcfService.Department[] departmentsList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceED/LoadEmployees", ReplyAction="http://tempuri.org/IServiceED/LoadEmployeesResponse")]
        System.Threading.Tasks.Task<ED_WcfService.Employee[]> LoadEmployeesAsync(ED_WcfService.Department[] departmentsList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceED/AddEmployee", ReplyAction="http://tempuri.org/IServiceED/AddEmployeeResponse")]
        int AddEmployee(ED_WcfService.Employee empl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceED/AddEmployee", ReplyAction="http://tempuri.org/IServiceED/AddEmployeeResponse")]
        System.Threading.Tasks.Task<int> AddEmployeeAsync(ED_WcfService.Employee empl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceED/RemoveEmployee", ReplyAction="http://tempuri.org/IServiceED/RemoveEmployeeResponse")]
        int RemoveEmployee(ED_WcfService.Employee empl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceED/RemoveEmployee", ReplyAction="http://tempuri.org/IServiceED/RemoveEmployeeResponse")]
        System.Threading.Tasks.Task<int> RemoveEmployeeAsync(ED_WcfService.Employee empl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceED/UpdateEmployee", ReplyAction="http://tempuri.org/IServiceED/UpdateEmployeeResponse")]
        ED_WcfService.Employee UpdateEmployee(ED_WcfService.Employee empl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceED/UpdateEmployee", ReplyAction="http://tempuri.org/IServiceED/UpdateEmployeeResponse")]
        System.Threading.Tasks.Task<ED_WcfService.Employee> UpdateEmployeeAsync(ED_WcfService.Employee empl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceED/LoadDepartments", ReplyAction="http://tempuri.org/IServiceED/LoadDepartmentsResponse")]
        ED_WcfService.Department[] LoadDepartments();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceED/LoadDepartments", ReplyAction="http://tempuri.org/IServiceED/LoadDepartmentsResponse")]
        System.Threading.Tasks.Task<ED_WcfService.Department[]> LoadDepartmentsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceEDChannel : ED_DesktopClient.EDServiceReference.IServiceED, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceEDClient : System.ServiceModel.ClientBase<ED_DesktopClient.EDServiceReference.IServiceED>, ED_DesktopClient.EDServiceReference.IServiceED {
        
        public ServiceEDClient() {
        }
        
        public ServiceEDClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceEDClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceEDClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceEDClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ED_WcfService.Employee[] LoadEmployees(ED_WcfService.Department[] departmentsList) {
            return base.Channel.LoadEmployees(departmentsList);
        }
        
        public System.Threading.Tasks.Task<ED_WcfService.Employee[]> LoadEmployeesAsync(ED_WcfService.Department[] departmentsList) {
            return base.Channel.LoadEmployeesAsync(departmentsList);
        }
        
        public int AddEmployee(ED_WcfService.Employee empl) {
            return base.Channel.AddEmployee(empl);
        }
        
        public System.Threading.Tasks.Task<int> AddEmployeeAsync(ED_WcfService.Employee empl) {
            return base.Channel.AddEmployeeAsync(empl);
        }
        
        public int RemoveEmployee(ED_WcfService.Employee empl) {
            return base.Channel.RemoveEmployee(empl);
        }
        
        public System.Threading.Tasks.Task<int> RemoveEmployeeAsync(ED_WcfService.Employee empl) {
            return base.Channel.RemoveEmployeeAsync(empl);
        }
        
        public ED_WcfService.Employee UpdateEmployee(ED_WcfService.Employee empl) {
            return base.Channel.UpdateEmployee(empl);
        }
        
        public System.Threading.Tasks.Task<ED_WcfService.Employee> UpdateEmployeeAsync(ED_WcfService.Employee empl) {
            return base.Channel.UpdateEmployeeAsync(empl);
        }
        
        public ED_WcfService.Department[] LoadDepartments() {
            return base.Channel.LoadDepartments();
        }
        
        public System.Threading.Tasks.Task<ED_WcfService.Department[]> LoadDepartmentsAsync() {
            return base.Channel.LoadDepartmentsAsync();
        }
    }
}
